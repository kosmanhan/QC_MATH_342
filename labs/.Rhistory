skimr::skim(bills)
skimr::skim(payments)
skimr::skim(discounts)
bills_and_payments = left_join(bills, payments, by=join_by("id" == "bill_id"))
bills_and_payments_and_discounts = left_join(bills_and_payments, discounts, by=join_by("discount_id" == "id"))
?left_join
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
filter((!is.na(transaction_date) & transaction_date<=due_date)|is.na(transaction_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate (payment_total = sum(paid_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (payment_total = if_else(is.na(payment_total),0,payment_total))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (paid_in_full = as.numeric(payment_total >= tot_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id)%>%
slice(1)
table(bills_and_payments_and_discounts$paid_in_full)
rm(list = ls())
n_train = 500
sigma = 0.3
x_min = 0
x_max = 10
f_x = function(x){sin(x)}
x_train = runif(n_train, x_min, x_max)
y_train = f_x(x) + rnorm(n_train, 0, sigma)
rm(list = ls())
n_train = 500
sigma = 0.3
x_min = 0
x_max = 10
f_x = function(x){sin(x)}
x_train = runif(n_train, x_min, x_max)
y_train = f_x(x) + rnorm(n_train, 0, sigma)
f_x = function(x){sin(x)}
x_train = runif(n_train, x_min, x_max)
y_train = f_x(x) + rnorm(n_train, 0, sigma)
y_train = f_x + rnorm(n_train, 0, sigma)
y_train = f_x(x_train) + rnorm(n_train, 0, sigma)
rm(list = ls())
n_train = 500
sigma = 0.3
x_min = 0
x_max = 10
f_x = function(x){sin(x)}
x_train = runif(n_train, x_min, x_max)
y_train = f_x(x_train) + rnorm(n_train, 0, sigma)
n_test = 500
pacman::ggplot()
ggplot(data.frame(x = x, y = y), aes(x, y)) +
geom_point(lwd = 0.6) +
geom_point(aes(x, y), data.frame(x = x_predict, y = g), col = "blue")
n_test = 500
pacman::p_load(ggplot2)
ggplot(data.frame(x = x_train, y = y_train), aes(x, y)) + geom_point()
bills_and_payments_and_discounts
bills_and_payments_and_discounts
options(java.parameters = "-Xmx4000m")
pacman::p_load(rJava)
.jinit()
if (!pacman::p_isinstalled(YARF)){
pacman::p_install_gh("kapelner/YARF/YARFJARs", ref = "dev")
pacman::p_install_gh("kapelner/YARF/YARF", ref = "dev", force = TRUE)
}
pacman::p_load(YARF)
#setwd(...)
rm(list = ls())
pacman::p_load(tidyverse, magrittr, data.table, R.utils)
bills = fread("bills_dataset/bills.csv.bz2")
payments = fread("bills_dataset/payments.csv.bz2")
discounts = fread("bills_dataset/discounts.csv.bz2")
setnames(bills, "amount", "tot_amount")
setnames(payments, "amount", "paid_amount")
skimr::skim(bills)
skimr::skim(payments)
skimr::skim(discounts)
bills_and_payments = left_join(bills, payments, by=join_by("id" == "bill_id"))
bills_and_payments_and_discounts = left_join(bills_and_payments, discounts, by=join_by("discount_id" == "id"))
?left_join
bills_and_payments_and_discounts
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
filter((!is.na(transaction_date) & transaction_date<=due_date)|is.na(transaction_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate (payment_total = sum(paid_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (payment_total = if_else(is.na(payment_total),0,payment_total))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (paid_in_full = as.numeric(payment_total >= tot_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id)%>%
slice(1)
table(bills_and_payments_and_discounts$paid_in_full)
#setwd(...)
rm(list = ls())
pacman::p_load(tidyverse, magrittr, data.table, R.utils)
bills = fread("bills_dataset/bills.csv.bz2")
payments = fread("bills_dataset/payments.csv.bz2")
discounts = fread("bills_dataset/discounts.csv.bz2")
setnames(bills, "amount", "tot_amount")
setnames(payments, "amount", "paid_amount")
skimr::skim(bills)
skimr::skim(payments)
skimr::skim(discounts)
bills_and_payments = left_join(bills, payments, by=join_by("id" == "bill_id"))
bills_and_payments_and_discounts = left_join(bills_and_payments, discounts, by=join_by("discount_id" == "id"))
?left_join
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
filter((!is.na(transaction_date) & transaction_date<=due_date)|is.na(transaction_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate (payment_total = sum(paid_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (payment_total = if_else(is.na(payment_total),0,payment_total))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (paid_in_full = as.numeric(payment_total >= tot_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(payment_at_least_one_month_before_due_date = as.numeric(as.integer(due_date) - as.integer(transcation_date) >= 30))
bills_and_payments_and_discounts
bills_and_payments
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
filter((!is.na(transaction_date) & transaction_date<=due_date)|is.na(transaction_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate (payment_total = sum(paid_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (payment_total = if_else(is.na(payment_total),0,payment_total))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (paid_in_full = as.numeric(payment_total >= tot_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(payment_at_least_one_month_before_due_date = as.numeric(as.integer(due_date) - as.integer(transaction_date) >= 30))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id)%>%
slice(1)
table(bills_and_payments_and_discounts$paid_in_full)
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate(number_of_payments_made_already = if_else(is.n(number_of_payments_made_already), 0, number_of_payments_made_already))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
filter((!is.na(transaction_date) & transaction_date<=due_date)|is.na(transaction_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
filter((!is.na(transaction_date) & transaction_date<=due_date)|is.na(transaction_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate (payment_total = sum(paid_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (payment_total = if_else(is.na(payment_total),0,payment_total))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (paid_in_full = as.numeric(payment_total >= tot_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(payment_at_least_one_month_before_due_date = as.numeric(as.integer(due_date) - as.integer(transaction_date) >= 30))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(number_of_payments_made_already = sum(payment_at_least_one_month_before_due_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate(number_of_payments_made_already = if_else(is.na(number_of_payments_made_already), 0, number_of_payments_made_already))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id)%>%
slice(1)
table(bills_and_payments_and_discounts$paid_in_full)
bills_and_payments_and_discounts
table(bills_and_payments_and_discounts$payment_at_least_one_month_before_due_date)
payment_at_least_one_month_before_due_date
ggplot(bills_and_payments_and_discounts) + aes(x = percent_paid) + geom_histogram()
percent_paid
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
filter((!is.na(transaction_date) & transaction_date<=due_date)|is.na(transaction_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate (payment_total = sum(paid_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (payment_total = if_else(is.na(payment_total),0,payment_total))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (paid_in_full = as.numeric(payment_total >= tot_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(payment_at_least_one_month_before_due_date = as.numeric(as.integer(due_date) - as.integer(transaction_date) >= 30))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(number_of_payments_made_already = sum(payment_at_least_one_month_before_due_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate(number_of_payments_made_already = if_else(is.na(number_of_payments_made_already), 0, number_of_payments_made_already))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(percent_paid = sum(payment_total / total_amount * payment_at_least_one_month_before_due_date))
#setwd(...)
rm(list = ls())
pacman::p_load(tidyverse, magrittr, data.table, R.utils)
bills = fread("bills_dataset/bills.csv.bz2")
payments = fread("bills_dataset/payments.csv.bz2")
discounts = fread("bills_dataset/discounts.csv.bz2")
setnames(bills, "amount", "tot_amount")
setnames(payments, "amount", "paid_amount")
skimr::skim(bills)
skimr::skim(payments)
skimr::skim(discounts)
bills_and_payments = left_join(bills, payments, by=join_by("id" == "bill_id"))
bills_and_payments_and_discounts = left_join(bills_and_payments, discounts, by=join_by("discount_id" == "id"))
?left_join
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
filter((!is.na(transaction_date) & transaction_date<=due_date)|is.na(transaction_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate (payment_total = sum(paid_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (payment_total = if_else(is.na(payment_total),0,payment_total))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (paid_in_full = as.numeric(payment_total >= tot_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(payment_at_least_one_month_before_due_date = as.numeric(as.integer(due_date) - as.integer(transaction_date) >= 30))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(number_of_payments_made_already = sum(payment_at_least_one_month_before_due_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate(number_of_payments_made_already = if_else(is.na(number_of_payments_made_already), 0, number_of_payments_made_already))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(percent_paid = sum(payment_total / total_amount * payment_at_least_one_month_before_due_date))
#setwd(...)
rm(list = ls())
pacman::p_load(tidyverse, magrittr, data.table, R.utils)
bills = fread("bills_dataset/bills.csv.bz2")
payments = fread("bills_dataset/payments.csv.bz2")
discounts = fread("bills_dataset/discounts.csv.bz2")
setnames(bills, "amount", "tot_amount")
setnames(payments, "amount", "paid_amount")
skimr::skim(bills)
skimr::skim(payments)
skimr::skim(discounts)
bills_and_payments = left_join(bills, payments, by=join_by("id" == "bill_id"))
bills_and_payments_and_discounts = left_join(bills_and_payments, discounts, by=join_by("discount_id" == "id"))
?left_join
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
filter((!is.na(transaction_date) & transaction_date<=due_date)|is.na(transaction_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate (payment_total = sum(paid_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (payment_total = if_else(is.na(payment_total),0,payment_total))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (paid_in_full = as.numeric(payment_total >= tot_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(payment_at_least_one_month_before_due_date = as.numeric(as.integer(due_date) - as.integer(transaction_date) >= 30))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(number_of_payments_made_already = sum(payment_at_least_one_month_before_due_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate(number_of_payments_made_already = if_else(is.na(number_of_payments_made_already), 0, number_of_payments_made_already))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id)%>%
slice(1)
table(bills_and_payments_and_discounts$paid_in_full)
bills_and_payments_and_discounts
bills_and_payments_and_discounts
bills_and_payments_and_discounts= bills_and_payments_and_discounts %>%
mutate(due_date_as_integer = as.integer(due_date))
bills_and_payments_and_discounts
ggplot(bills_and_payments_and_discounts) + aes(x = percent_paid) + geom_histogram()
bills_and_payments_and_discounts
bills_and_payments_and_discounts$discount_id
summarize(bills_and_payments_and_discounts$discount_id)
summary(bills_and_payments_and_discounts$discount_id)
bills_and_payments_and_discounts= bills_and_payments_and_discounts %>%
mutate(due_date_as_integer = as.integer(due_date))
#do customer id's into factor for common customer > 10 otherwise "other"
#convert discount id to factor if number of idscount id's is > 10. Drop all other columns from discount table.
bills_and_payments_and_discounts= bills_and_payments_and_discounts %>%
select(-id.y, -id, -due_date, -invoice_date, -customer_id, -discount_id, -paid_amount, -transaction_date, -num_days, -pct_off, -days_until_discount, -payment_total, -payment_at_least_one_month_before_due_date)
bills_and_payments_and_discounts
bills_and_payments_and_discounts= bills_and_payments_and_discounts %>%
mutate(due_date_as_integer = as.integer(due_date))
bills_and_payments_and_discounts= bills_and_payments_and_discounts %>%
select(-id.y, -id, -due_date, -invoice_date, -customer_id, -discount_id, -paid_amount, -transaction_date, -num_days, -pct_off, -days_until_discount, -payment_total, -payment_at_least_one_month_before_due_date)
bills_and_payments_and_discounts= bills_and_payments_and_discounts %>%
select(-id.y, -id, -due_date, -invoice_date, -customer_id, -discount_id, -paid_amount, -transaction_date, -num_days, -pct_off, -days_until_discount, -payment_total, -payment_at_least_one_month_before_due_date)
bills_and_payments_and_discounts
#setwd(...)
rm(list = ls())
pacman::p_load(tidyverse, magrittr, data.table, R.utils)
bills = fread("bills_dataset/bills.csv.bz2")
payments = fread("bills_dataset/payments.csv.bz2")
discounts = fread("bills_dataset/discounts.csv.bz2")
setnames(bills, "amount", "tot_amount")
setnames(payments, "amount", "paid_amount")
skimr::skim(bills)
skimr::skim(payments)
skimr::skim(discounts)
bills_and_payments = left_join(bills, payments, by=join_by("id" == "bill_id"))
bills_and_payments_and_discounts = left_join(bills_and_payments, discounts, by=join_by("discount_id" == "id"))
?left_join
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
filter((!is.na(transaction_date) & transaction_date<=due_date)|is.na(transaction_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate (payment_total = sum(paid_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (payment_total = if_else(is.na(payment_total),0,payment_total))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate (paid_in_full = as.numeric(payment_total >= tot_amount))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(payment_at_least_one_month_before_due_date = as.numeric(as.integer(due_date) - as.integer(transaction_date) >= 30))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id) %>%
mutate(number_of_payments_made_already = sum(payment_at_least_one_month_before_due_date))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
mutate(number_of_payments_made_already = if_else(is.na(number_of_payments_made_already), 0, number_of_payments_made_already))
bills_and_payments_and_discounts = bills_and_payments_and_discounts %>%
group_by(id)%>%
slice(1)
table(bills_and_payments_and_discounts$paid_in_full)
rm(list = ls())
n_train = 500
sigma = 0.3
x_min = 0
x_max = 10
f_x = function(x){sin(x)}
x_train = runif(n_train, x_min, x_max)
y_train = f_x(x_train) + rnorm(n_train, 0, sigma)
n_test = 500
pacman::p_load(ggplot2)
ggplot(data.frame(x = x_train, y = y_train), aes(x, y)) + geom_point()
rm(list = ls())
n_train = 500
sigma = 0.3
x_min = 0
x_max = 10
x = runif(n_train, x_min, x_max)
f_x = function(x){sin(x)}
x_train = runif(n_train, x_min, x_max)
y_train = f_x(x_train) + rnorm(n_train, 0, sigma)
n_test = 500
pacman::p_load(ggplot2)
ggplot(data.frame(x = x, y = y_train), aes(x, y)) + geom_point()
n_test = 500
pacman::p_load(ggplot2)
ggplot(data.frame(x = x, y = f_x(x)), aes(x, y)) + geom_point()
rm(list = ls())
n_train = 500
sigma = 0.3
x_min = 0
x_max = 10
x = runif(n_train, x_min, x_max)
f_x = function(x){sin(x)}
x_train = runif(n_train, x_min, x_max)
y_train = f_x(x_train) + rnorm(n_train, 0, sigma)
rm(list = ls())
n = 2000
sigma = 0.3
x_min = 0
x_max = 10
x = runif(n, x_min, x_max)
f_x = function(x){sin(x)}
x_train = runif(n_train, x_min, x_max)
rm(list = ls())
n_train = 500
sigma = 0.3
x_min = 0
x_max = 10
x = runif(n_train, x_min, x_max)
f_x = function(x){sin(x)}
x_train = runif(n_train, x_min, x_max)
y_train = f_x(x_train) + rnorm(n_train, 0, sigma)
n_test = 500
pacman::p_load(ggplot2)
ggplot(data.frame(x = x, y = f_x(x)), aes(x, y)) + geom_point()
n_test = 500
pacman::p_load(ggplot2)
ggplot(data.frame(x = x_train, y = y_train, aes(x, y)) + geom_point()
n_test = 500
pacman::p_load(ggplot2)
ggplot(data.frame(x = x_train, y = y_train, aes(x, y)) + geom_point()
n_test = 500
pacman::p_load(ggplot2)
ggplot(data.frame(x = x_train, y = y_train, aes(x, y)) + geom_point())
rm(list = ls())
n_train = 500
sigma = 0.3
x_min = 0
x_max = 10
x = runif(n_train, x_min, x_max)
f_x = function(x){sin(x)}
x_train = runif(n_train, x_min, x_max)
y_train = f_x(x_train) + rnorm(n_train, 0, sigma)
n_test = 500
pacman::p_load(ggplot2)
ggplot(data.frame(x = x_train, y = y_train, aes(x, y)) + geom_point())
n_test = 500
pacman::p_load(ggplot2)
ggplot(data.frame(x = x_train, y = y_train, aes(x, y)) + geom_point()
ggplot(data.frame(x = x_train, y = y_train)) + aes(x, y) + geom_point()
n_test = 500
x_test = runif(n_test, x_min, x_max)
y_test = f_x(x_test) + rnorm(n_test, 0, sigma)
rm(list = ls())
n_train = 2000
sigma = 0.3
x_min = 0
x_max = 10
x = runif(n_train, x_min, x_max)
f_x = function(x){sin(x)}
x_train = runif(n_train, x_min, x_max)
y_train = f_x(x_train) + rnorm(n_train, 0, sigma)
pacman::p_load(ggplot2)
ggplot(data.frame(x = x_train, y = y_train)) + aes(x, y) + geom_point()
n_test = 500
x_test = runif(n_test, x_min, x_max)
y_test = f_x(x_test) + rnorm(n_test, 0, sigma)
tree_mod = YARFCART(data.frame(x = x_train), y_train, calculate_oob_error = FALSE)
rm(list = ls())
pacman::p_load(Rcpp)
evalCpp("1 + 1", showOutput= TRUE)
dot_product_R=function(v1, v2){
dot_product=0
for(i in 1:length(v1)){
dot_product = dot_product + v1[i]*v2[i]
}
dot_product
}
dot_product_R(c(1,5),c(2,6))
cppFunction('
double dot_product_cpp(NumericVector v1, NumericVector v2) {
int dot_product=0;
for(int i = 0; i < v1.length(); i++){
dot_product = dot_product + (v1[i] * v2[i]);
}
return dot_product;
}
')
v3=c(1,5)
v4=c(2,6)
dot_product_cpp(v3,v4)
evalCpp(dot_product_cpp(v3,v4))
?evalCpp
n = 1e6
v1 = rnorm(n)
v2 = rnorm(n)
pacman::p_load(microbenchmark)
microbenchmark(
dot_product_R(v1, v2),
dot_product_cpp(v1, v2),
times = 10
)
gram_schmidt_R = function(X){
#first create orthogonal matrix
V = matrix(NA,
nrow = nrow(X),
ncol = ncol(X))
V[, 1] = X[, 1]
for (j in 2 : ncol(X)){
V[, j] = X[, j]
for (k in 1 : (j-1)){
v_k = V[, k, drop = FALSE]
V[, j] = V[, j, drop = FALSE] - (t(t(v_k)) %*% t(v_k) / sum(v_k^2)) %*% t(t(X[, j])) #i.e. the orthogonal projection of X[, j] onto v_k
}
}
Q = matrix(NA, nrow = nrow(X),
ncol = ncol(X))
for (j in 1 : ncol(X)){
Q[, j] = V[, j] / sqrt(sum(V[, j]^2))
}
Q
}
cppFunction('
NumericMatrix gram_schmidt_cpp(NumericMatrix X){
NumericMatrix V(X.nrow(), X.ncol());
for (int i = 0; i < X.nrow(); i++){
V[i][0] = X[i][0];
}
for (int j = 2; j < X.ncol(); j++){
for (int i = 0; i< X.nrow(); i++){
V[i][j] = X[i][j];
}
for (int k = 0; k<j; k++){
NumericMatrix v_k = V[, k];
V[_, j] = V[_, j] - (t(t(v_k)) %*% t(v_k) / sum(v_k^2)) %*% t(t(X[_, j]));
}
}
NumericMatrix Q(X.nrow(),X.ncol());
for (int j = 1; j < X.ncol(); j++){
Q[_, j] = V[_, j] / sqrt(sum(V[_, j]^2));
}
return Q;
}
')
cppFunction('
NumericMatrix gram_schmidt_cpp(NumericMatrix X){
NumericMatrix V(X.nrow(), X.ncol());
for (int i = 0; i < X.nrow(); i++){
V(i,0) = X(i,0);
}
for (int j = 1; j < X.ncol(); j++){
for (int i = 0; i< X.nrow(); i++){
V(i,j) = X(i,j);
}
for (int k = 0; k<j; k++){
NumericMatrix v_k = V(, k);
V(_, j) = V(_, j) - (t(t(v_k)) %*% t(v_k) / sum(v_k^2)) %*% t(t(X(_, j));
}
}
NumericMatrix Q(X.nrow(),X.ncol());
for (int j = 1; j < X.ncol(); j++){
Q(_, j) = V(_, j) / sqrt(sum(V[_, j)^2));
}
return NumericMatrix Q;
}
')
