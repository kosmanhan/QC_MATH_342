y = c(-200,1200,5000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = c(-150,1200,5000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = c(-150,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = c(-150,1200,4000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = c(-200,1200,4000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = c(-900,1200,4000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = c(-200,1200,4000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = c(-200,1200,9000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = c(200,1200,9000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = x^2
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = x^11
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = x^3
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = x^3+x^2
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = x^3+x^2+x
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = x^3+x^2
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = x^3+x^2/x
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = 1/x
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,3)
y = tan(x)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = sin(x)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = sin(x)+x
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
x = c(1,2,3)
y = sin(x^2)+x*1.1
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
x = c(1,2,3)
y = sin(x^2)+x*1.05
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
x = c(1,2,3)
y = sin(x^2)+x*1.001
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
x = c(1,2,3)
y = sin(x^2)+x*1.009
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
x = c(1,2,3)
y = sin(x^2)+x*1.001
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
x = c(1,2,3)
y = sin(x^2)+x*1.015
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(1,2,3)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,6000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,8000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,9000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,10000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,100000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,50000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,40000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,30000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,20000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,25000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,22000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,21000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,20000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,22000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,21500)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1200,21400)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1100,21400)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,1000,21400)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,800,21400)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,800,20000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,800,19000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,800,18000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,800,17000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,800,18000)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,800,17500)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
epsilon = 0.01
M = 1000
x = c(1,2,10)
y = c(200,800,17800)
#y = c(200,1200,6000)
Xy = data.frame(x = x, y = y)
my_simple_ols(x,y)$Rsq; my_simple_ols(x,y)$RMSE
pacman::p_load(ggplot2)
#x = c(-5,0,5)
#y = x^4
x=seq(0,6*pi, length.out=1000)
y=cos(x)
#first check that Rsq is around zero
summary(lm(y ~ x))$r.squared
#now check association visually
ggplot(data.frame(x = x, y = y)) + geom_point(aes(x = x, y = y))
#Xy = data.frame(x = x, y = y)
#my_simple_ols(x,y)$Rsq
my_ols = function(X, y){
n=nrow(X)
X=cbind(1,X)
b = solve(t(X) %*% X) %*%t(X) %*% y #inverse of (X^T * X)
yhat = X %*% b
e = y-yhat
df = ncol(X) #p+1, parameters + 1 in models, intercept + slope of parameters
SSE = sum(e^2)
SST = sum((y - mean(y))^2) # ybar=mean(y)
MSE = SSE/(n-df)
RMSE = sqrt(MSE)
Rsq = ((SST-SSE)/SST)
lmobj = list(
b=b,
yhat=yhat,
e=e,
df=df,
SSE=SSE,
SST=SST,
MSE=MSE,
RMSE=RMSE,
Rsq
)
class(lmobj)= "my_ols"
lmobj
}
cars=MASS::Cars93
X = model.matrix(~Type,cars)[,-1]
head(X)
y = cars$Price
my_ols(X,y)$b
#identical()
g = function(x_star, X, y){
c(1,x_star) %*% my_ols(X[,-1],y)$b
}
data(iris)
coef(lm(Petal.Length ~ Species, iris))
mean(iris$Petal.Length[iris$Species == "setosa"])
mean(iris$Petal.Length[iris$Species == "versicolor"])
mean(iris$Petal.Length[iris$Species == "virginica"])
#design matrix is just the X intercept?
X= cbind(1,
ifelse(iris$Species == 'versicolor',1,0),
ifelse(iris$Species == 'virginica',1,0)
)
rm(list = ls())
install.packages('BiocManager')
pacman::p_load(ggplot2, skim)
diamonds = ggplot2::diamonds
#skim(diamonds)#, skim is good
summary(diamonds)
typeof(diamonds$color)
levels(diamonds$color)
diamonds$color_as_numeric=as.numeric(diamonds$color)
head(diamonds$color_as_numeric)
summary(lm(price ~ color_as_numeric, diamonds))$sigma
diamonds$color_as_nominal=factor(diamonds$color, ordered = FALSE)
head(diamonds$color_as_nominal)
summary(lm(price ~ color_as_nominal, diamonds))$sigma
colorasnn=cbind(diamonds$color_as_numeric,diamonds$color_as_nominal)
summary(lm(price ~ color_as_numeric + color_as_nominal, diamonds))$sigma
summary(lm(price ~ color_as_nominal + color_as_numeric, diamonds))$sigma
?lm
summary(lm(price ~ color_as_nominal + color_as_numeric, diamonds))
#rm(list = ls())
#data(iris)
#X=model.matrix(Species~., iris)
#H = X%*%solve(t(X)%*%X)%*%t(X)
diamonds1000=ggplot2::diamonds[1:1000,]
X = model.matrix(price ~ color,diamonds1000)
H = X%*%solve(t(X)%*%X)%*%t(X)
pacman::p_load(testthat)
expect_equal(H,t(H))
expect_equal(H%*%H,H)
sum(diag(H)) #trace of an orthogonal projection matrix equals its rank
dim(X)
dim(H)
dim(H[,8:1000])
y=t(t(diamonds1000$price))
yhat=H%*%y
I=diag(nrow(H))
e= (I-H)%*%y
#orthogonal = dot product equals zero
t(e)%*%yhat
SST = sum((y - mean(y))^2)
SSE = sum((e)^2)
SSR = sum((yhat-mean(y))^2)
SST -(SSR+SSE)
Rsq = SSR/SST
numer=sqrt(sum((yhat-mean(y))^2))
denom=sqrt(sum((y-mean(y))^2))
theta = acos(numer/denom)
cos(theta)^2
expect_equal(Rsq,cos(theta)^2)
n = nrow(X)
sum_proj_y = matrix(0,nrow = n, ncol = 1)
for(j in 1:ncol(X)){
x_j = X[,j, drop = FALSE]
sum_proj_y = sum_proj_y + (x_j %*% t(x_j) / sum(x_j^2)) %*% y
}
#expect_equal(yhat, sum_proj_y)
sum(yhat- sum_proj_y)
pacman::p_load(carData)
X=carData::GSSvocab
X=na.omit(X )
skimr::skim(X)
?GSSvocab
pacman::p_load(ggplot2)
ggplot::X
ggplot(X)
ggplot(X) +
aes(age)
plot_age + geom_histogram()
pacman::p_load(ggplot2)
ggplot(X) +
aes(age)
plot_age + geom_histogram()
plot_age=ggplot(X) +
aes(age)
plot_age=ggplot(X) +
aes(age)
plot_age + geom_histogram()
plot_age + geom_dotplot()
plot_age + geom_density()
X$vocab_factor=factor(X$vocab)
ggplot(X) + aes(vocab_factor) + geom_bar()
ggplot(X) + aes(ageGroup) + geom_bar()
ggplot(X) + aes(ageGroup, color = gender) + geom_bar()
ggplot(X) + aes(x = ageGroup) + geom_bar() + facet_grid(~ .)
ggplot(X) + aes(x = ageGroup) + geom_bar() + facet_grid(gender~ .)
ggplot(X) + aes(y = age, x = vacob_factor) + geom_boxplot()
ggplot(X) + aes(y = age, x = vacob_factor) + geom_boxplot()
ggplot(X) + aes(y = age, x = vocab_factor) + geom_boxplot()
ggplot(X) + aes(x = age, y= vocab_factor) + geom_boxplot()
y
y
ggplot(X) + aes(x = age, y= vocab_factor) + geom_boxplot()
ggplot(X) + aes(y = age, x= vocab_factor) + geom_boxplot()
ggplot(X) + aes(x = age, y= vocab_factor) + geom_boxplot()
ggplot(X) + aes(x = age, y= vocab) + geom_point()
ggplot(X) + aes(x = age, y= vocab) + geom_smooth()
ggplot(X) + aes(x = age, y= vocab) + geo_point() + geom_smooth()
ggplot(X) + aes(x = age, y= vocab) + geom_point() + geom_smooth()
ggplot(X) + aes(x = age, y= vocab) + geom_point() + geom_smooth()+facet_grid(.~gender)
ggplot(X) + aes(x = age, y= vocab) + geom_smooth()+facet_grid(.~gender)
ggplot(X) + aes(x = age, y= vocab, color = gender) + geom_smooth()
ggplot(X) + aes(x = age, y= vocab, color = nativeBorn) + geom_smooth()
#TO-DO,
ggplot(X) + aes(x = age, y= vocab, color = educGroup) + geom_smooth()
#TO-DO,
ggplot(X) + aes(x= vocab, y = educGroup) + geom_smooth()
#TO-DO,
ggplot(X) + aes(x= vocab, y = educGroup) + geom_boxplot()
ggplot(X) + aes(x= educGroup, y = vocab) + geom_boxplot()
