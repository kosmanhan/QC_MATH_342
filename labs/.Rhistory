(1-p)
1-p
(1-p)^2
(1-p)^20
(1-p)^24
(1-p)^100-76
(1-p)^(100-76)
((factorial(100)/(factorial(76)*factorial(100-76)))*(p^76)*(1-p)^(100-76)
((factorial(100)/(factorial(76)*factorial(100-76)))*(p^76)*(1-p)^(100-76)
(factorial(100)/(factorial(76)*factorial(100-76)))
0
(factorial(100)/(factorial(76)*factorial(100-76)))
((factorial(100)/(factorial(76)*factorial(100-76)))*(p^76)*(1-p)^(100-76))
prob=prob+((factorial(100)/(factorial(i)*factorial(100-i)))*(p^i)*(1-p)^(100-i))
n = 100
prob=0
for(i in 76:100){
prob=prob+((factorial(100)/(factorial(i)*factorial(100-i)))*(p^i)*(1-p)^(100-i))
print(prob)
}
prob
for(i in 0:100){
prob=prob+((factorial(100)/(factorial(i)*factorial(100-i)))*(p^i)*(1-p)^(100-i))
print(prob)
}
prob
for(i in 1:100){
prob=prob+((factorial(100)/(factorial(i)*factorial(100-i)))*(p^i)*(1-p)^(100-i))
print(prob)
}
prob=0
for(i in 1:100){
prob=prob+((factorial(100)/(factorial(i)*factorial(100-i)))*(p^i)*(1-p)^(100-i))
print(prob)
}
prob
for(i in 0:100){
prob=prob+((factorial(100)/(factorial(i)*factorial(100-i)))*(p^i)*(1-p)^(100-i))
print(prob)
}
n = 100
prob=0
for(i in 0:100){
prob=prob+((factorial(100)/(factorial(i)*factorial(100-i)))*(p^i)*(1-p)^(100-i))
print(prob)
}
prob
n = 100
prob=0
for(i in 76:100){
prob=prob+((factorial(100)/(factorial(i)*factorial(100-i)))*(p^i)*(1-p)^(100-i))
print(prob)
}
prob
#using R's inbuilt features:
?pbinom
dbinom(76,n,p)
rprob=0
for(j in 76:100){
rprob=rprob+dbinom(j,n,p)
}
rprob
prob
p_hat=glm(y ~ X[, "glu"], family = "binomial")$fitted.values
log_odds_hat=log(p_hat/(1-p_hat))
ggplot(data.frame(log_odds_hat=log_odds_hat, has_diabetes = factor(y))) +
aes(x = has_diabetes, y = log_odds_hat) +
geom_boxplot()
ggplot(data.frame(p_hat=p_hat, has_diabetes = factor(y))) +
aes(x = has_diabetes, y = p_hat) +
geom_boxplot()
binom(5,2)
rprob
has_diabetes = factor(y)
has_diabetes
log_odds_hat
p_hat
log_odds_hat-has_diabetes
log_odds_hat
has_diabetes
has_diabetes
y
has_diabetes
y
log_odds_hat-y
sum(log_odds_hat-y)
sum(log_odds_hat-y)^2
#TO-DO
log_odds_hat
phat
p_hat
sum(log_odds_hat-y)
sum((log_odds_hat-y)^2)
sum(log_odds_hat-y)^2
sum((log_odds_hat-y)^2)
sum(log_odds_hat-y)^2
sum((log_odds_hat-y)^2)
sum(log_odds_hat-y)^2
sum(log_odds_hat-y)^2
sum((log_odds_hat-y)^2)
sum((log_odds_hat-y)^2)
sum(log_odds_hat-y)^2
sum((log_odds_hat-y)^2)
sum(log_odds_hat-y)^2
sum((log_odds_hat-y)^2)
sum(log_odds_hat-y)^2
sum((log_odds_hat-y)^2)
sum((log_odds_hat-y)^2)
sum((log_odds_hat-y)^2)
sum((log_odds_hat-y)^2)
sum(log_odds_hat-y)^2
sum(log_odds_hat-y)^2
p_hat
p_hat
#TO-DO
log_odds_hat
p_hat
length(y)
piman=length(y)
sum((log_odds_hat-y)^2)/piman
sum(-(log_odds_hat-y)^2)/piman
sum((p_hat-y)^2)
sum(log_odds_hat-y)^2
sum((p_hat-y)^2)
sum(p_hat-y)^2
sum((p_hat-y)^2)
sum((p_hat-y)^2)/piman
sum((p_hat-y)^2)/piman
sum(-(p_hat-y)^2)/piman
y*ln(p_hat)+(1-y)*ln(p_hat)
y*log(p_hat)+(1-y)*log(p_hat)
sum(y*log(p_hat)+(1-y)*log(p_hat))
sum(y*log(p_hat)+(1-y)*log(p_hat))/piman
sum(y*log(p_hat)+(1-y)*log(p_hat))/piman
coef(glm(y~x, family="binomial",(link="probit")))
coef(glm(y~x, family="binomial"(link="probit")))
coef(glm(y ~ X[, "glu"], family = "binomial"))
coef(glm(y ~ X[, "npreg"], family = "binomial"))
coef(glm(y ~ X[, "bp"], family = "binomial"))
coef(glm(y ~ X[, "skin"], family = "binomial"))
coef(glm(y ~ X[, "bmi"], family = "binomial"))
coef(glm(y ~ X[, "ped"], family = "binomial"))
coef(glm(y ~ X[, "age"], family = "binomial"))
glm(y ~ X[, "age"], family = "binomial")
glm(y ~ X[, "ped", age"], family = "binomial")
glm(y ~ X[, "ped" & "age"], family = "binomial")
glm(y ~ X[, "ped" + "age"], family = "binomial")
glm(y ~ ., family = "binomial")
glm(y ~., family = "binomial")
glm(y ~ . , family = "binomial")
glm(y ~ . X, family = "binomial")
glm(y ~ X, family = "binomial")
glm(y ~ X[], family = "binomial")
glm(y ~ X[,.], family = "binomial")
glm(y ~ X[,], family = "binomial")
glm(y ~ X[,], family = "binomial")
?glm
glm(y ~ X[, "age"] + X[, "ped"], family = "binomial")
glm(y ~
X[, "age"] +
X[, "ped"] +
X[, "bmi"] +
X[, "skin"] +
X[, "bp"] +
X[, "npreg"] +
X[, "glu"], family = "binomial")
coef(
glm(y ~
X[, "age"] +
X[, "ped"] +
X[, "bmi"] +
X[, "skin"] +
X[, "bp"] +
X[, "npreg"] +
X[, "glu"], family = "binomial")
)
coef(glm(y ~ X[, "glu"], family = "binomial"))
coef(glm(y ~ X[, "npreg"], family = "binomial"))
coef(glm(y ~ X[, "bp"], family = "binomial"))
coef(glm(y ~ X[, "skin"], family = "binomial"))
coef(glm(y ~ X[, "bmi"], family = "binomial"))
coef(glm(y ~ X[, "ped"], family = "binomial"))
coef(glm(y ~ X[, "age"], family = "binomial"))
coef(
glm(y ~
X[, "age"] +
X[, "ped"] +
X[, "bmi"] +
X[, "skin"] +
X[, "bp"] +
X[, "npreg"] +
X[, "glu"], family = "binomial")
)
coef(
glm(y ~
X[, "age"] +
X[, "ped"] +
X[, "bmi"] +
X[, "skin"] +
X[, "bp"] +
X[, "npreg"] +
X[, "glu"], family = "binomial")
)
coef(
glm(y ~
X[, "age"] +
X[, "ped"] +
X[, "bmi"] +
X[, "skin"] +
X[, "bp"] +
X[, "npreg"] +
X[, "glu"], family = "binomial"(link="probit"))
)
coef(
glm(y ~
X[, "age"] +
X[, "ped"] +
X[, "bmi"] +
X[, "skin"] +
X[, "bp"] +
X[, "npreg"] +
X[, "glu"], family = "binomial")
)
p_hat=glm(y ~ X[, "glu"], family = "binomial")$fitted.values
log_odds_hat=log(p_hat/(1-p_hat))
has_diabetes = factor(y)
log_odds_hat
ggplot(data.frame(log_odds_hat=log_odds_hat, has_diabetes = factor(y))) +
aes(x = has_diabetes, y = log_odds_hat) +
geom_boxplot()
p_hatprobit=glm(y ~ X[, "glu"], family = "binomial"(link="probit"))$fitted.values
ggplot(data.frame(p_hat=p_hat, has_diabetes = factor(y))) +
aes(x = has_diabetes, y = p_hat) +
geom_boxplot()
ggplot(data.frame(p_hatprobit=p_hatprobit, has_diabetes = factor(y))) +
aes(x = has_diabetes, y = p_hat) +
geom_boxplot()
ggplot(data.frame(p_hatprobit=p_hatprobit, has_diabetes = factor(y))) +
aes(x = has_diabetes, y = p_hatprobit) +
geom_boxplot()
p_hatprobit=glm(y ~ X[, "glu"], family = "binomial"(link="probit"))$fitted.values
ggplot(data.frame(p_hatprobit=p_hatprobit, has_diabetes = factor(y))) +
aes(x = has_diabetes, y = p_hatprobit) +
geom_boxplot()
sum(-(p_hatprobit-y)^2)/piman
lrbrier=sum(-(p_hat-y)^2)/piman
lrlogscoring=sum(y*log(p_hat)+(1-y)*log(p_hat))/piman
prbrier=sum(-(p_hatprobit-y)^2)/piman
lrbrier-prbrier
prlogscoring=sum(y*log(p_hatprobit)+(1-y)*log(p_hatprobit))/piman
lrlogscoring-prlogscoring
p_hatter=glm(y ~
X[, "age"] +
X[, "ped"] +
X[, "bmi"] +
X[, "skin"] +
X[, "bp"] +
X[, "npreg"] +
X[, "glu"], family = "binomial")$fitted.values
p_hatter
p_hatter=glm(y ~
X[, "age"] +
X[, "ped"] +
X[, "bmi"] +
X[, "skin"] +
X[, "bp"] +
X[, "npreg"] +
X[, "glu"], family = "binomial")$fitted.values
log_odds_hatter=log(p_hatter/(1-p_hatter))
has_diabetes = factor(y)
log_odds_hatter
ggplot(data.frame(log_odds_hatter=log_odds_hatter, has_diabetes = factor(y))) +
aes(x = has_diabetes, y = log_odds_hatter) +
geom_boxplot()
ggplot(data.frame(p_hatter=p_hatter, has_diabetes = factor(y))) +
aes(x = has_diabetes, y = p_hatter) +
geom_boxplot()
lrbrier=sum(-(p_hatter-y)^2)/piman
lrbrier
lrlogscoring=sum(y*log(p_hatter)+(1-y)*log(p_hatter))/piman
lrlogscoring
coef(
glm(y ~
X[, "age"] +
X[, "ped"] +
X[, "bmi"] +
X[, "skin"] +
X[, "bp"] +
X[, "npreg"] +
X[, "glu"], family = "binomial"(link="probit"))
)
ggplot(data.frame(p_hatterprobit=p_hatterprobit, has_diabetes = factor(y))) +
aes(x = has_diabetes, y = p_hatterprobit) +
geom_boxplot()
p_hatterprobit=glm(y ~ X[, "glu"], family = "binomial"(link="probit"))$fitted.values
ggplot(data.frame(p_hatterprobit=p_hatterprobit, has_diabetes = factor(y))) +
aes(x = has_diabetes, y = p_hatterprobit) +
geom_boxplot()
p_hatterprobit=glm(y ~ X[, "age"] +
X[, "ped"] +
X[, "bmi"] +
X[, "skin"] +
X[, "bp"] +
X[, "npreg"] +
X[, "glu"], family = "binomial"(link="probit"))$fitted.values
ggplot(data.frame(p_hatterprobit=p_hatterprobit, has_diabetes = factor(y))) +
aes(x = has_diabetes, y = p_hatterprobit) +
geom_boxplot()
prbrier=sum(-(p_hatterprobit-y)^2)/piman
lrbrier-prbrier
prlogscoring=sum(y*log(p_hatterprobit)+(1-y)*log(p_hatterprobit))/piman
lrlogscoring-prlogscoring
y
nrow(y)
nrow(y)
piman=length(y)
y
y[4]
#I set seed to 1994 as that is my birth year
set.seed(1994)
K = 3
test_prop = 1 / K
train_indices = sample(1 : piman, round((1 - test_prop) * piman))
test_indices = setdiff(1 : piman, train_indices)
y
y_train = y[train_indices, ]
train_indices
train_indices
y_train = y[train_indices, ]
train_indices
y_train = y[train_indices]
y_train
y_train = y_train$class
test_indices
X
X[200]
X[200,]
X[201,]
X[200,]
X
X
X_train = X[train_indices]
X_train = X[train_indices]
X_train = X[train_indices,]
#I set seed to 1994 as that is my birth year
set.seed(1994)
K = 3
test_prop = 1 / K
train_indices = sample(1 : piman, round((1 - test_prop) * piman))
test_indices = setdiff(1 : piman, train_indices)
test_indices = setdiff(1 : piman, train_indices)
y_train = y[train_indices]
X_train = X[train_indices,]
y_test = y[test_indices]
X_test = X[test_indices,]
phatlogittest,phatlogittrain,
phatlogittest,phatlogittrain,
?predict
logistic_mod = glm(y_train ~
X_train[, "age"] +
X_train[, "ped"] +
X_train[, "bmi"] +
X_train[, "skin"] +
X_train[, "bp"] +
X_train[, "npreg"] +
X_train[, "glu"], family = "binomial")$fitted.values
predict(logistic_mod,y_train)
logistic_mod
y_train
logistic_mod
coef(logistic_mod)
logistic_mod = glm(y_train ~
X_train[, "age"] +
X_train[, "ped"] +
X_train[, "bmi"] +
X_train[, "skin"] +
X_train[, "bp"] +
X_train[, "npreg"] +
X_train[, "glu"], family = "binomial")
logistic_mod
View(X_train)
logistic_mod = glm(y_train ~
X_train[, "age"] +
X_train[, "ped"] +
X_train[, "bmi"] +
X_train[, "skin"] +
X_train[, "bp"] +
X_train[, "npreg"] +
X_train[, "glu"], family = "binomial")
predict(logistic_mod,y_train)
predict(logistic_mod,X_train)
predict(logistic_mod,X_train)
#I set seed to 1994 as that is my birth year
set.seed(1994)
K = 3
test_prop = 1 / K
train_indices = sample(1 : piman, round((1 - test_prop) * piman))
test_indices = setdiff(1 : piman, train_indices)
y_train = y[train_indices]
X_train = X[train_indices,]
y_test = y[test_indices]
X_test = X[test_indices,]
logistic_mod = glm(y_train ~
X_train[, "age"] +
X_train[, "ped"] +
X_train[, "bmi"] +
X_train[, "skin"] +
X_train[, "bp"] +
X_train[, "npreg"] +
X_train[, "glu"], family = "binomial")
phatlogittrain=predict(logistic_mod,X_train)
phatlogittest=predict(logistic_mod,X_test)
probit_mod= glm(y_train ~
X_train[, "age"] +
X_train[, "ped"] +
X_train[, "bmi"] +
X_train[, "skin"] +
X_train[, "bp"] +
X_train[, "npreg"] +
X_train[, "glu"], family = "binomial"(link="probit"))
phatprobittrain=predict(probit_mod,X_train)
phatprobittest=predict(probit_mod,X_test)
lrtrainbrier=mean(-(phatlogittrain-y_train)^2)
lrtrainlogscoring=mean(y_train*log(phatlogittrain)+(1-y_train)*log(phatlogittrain))
prtrainbrier=mean(-(phatprobittrain-y_train)^2)
prtrainlogscoring=mean(y_train*log(phatprobittrain)+(1-y_train)*log(phatprobittrain))
lrtestbrier=mean(-(phatlogittest-y_train)^2)
lrtestlogscoring=mean(y_train*log(phatlogittest)+(1-y_train)*log(phatlogittest))
prtestbrier=mean(-(phatlogittest-y_train)^2)
prtestlogscoring=mean(y_train*log(phatlogittest)+(1-y_train)*log(phatlogittest))
phatprobittrain
phatprobittest
lrtrainbrier
lrtrainlogscoring
prlogscoring
y_train
phatlogittrain
log(phatlogittrain
log(phatlogittrain
log(phatlogittrain)
phatlogittrain=predict(logistic_mod,X_train)
phatlogittrain
p_hatterprobit
phatprobittrain=abs(predict(probit_mod,X_train))
phatprobittest=abs(predict(probit_mod,X_test))
phatprobittest
lrtrainbrier=mean(-(phatlogittrain-y_train)^2)
lrtrainbrier
lrtrainbrier=mean(-(phatlogittrain-y_train)^2)
lrtrainlogscoring=mean(y_train*log(phatlogittrain)+(1-y_train)*log(phatlogittrain))
prtrainbrier=mean(-(phatprobittrain-y_train)^2)
prtrainlogscoring=mean(y_train*log(phatprobittrain)+(1-y_train)*log(phatprobittrain))
lrtestbrier=mean(-(phatlogittest-y_train)^2)
lrtestlogscoring=mean(y_train*log(phatlogittest)+(1-y_train)*log(phatlogittest))
prtestbrier=mean(-(phatlogittest-y_train)^2)
prtestlogscoring=mean(y_train*log(phatlogittest)+(1-y_train)*log(phatlogittest))
lrtrainlogscoring
lrtrainbrier
prtrainbrier
prtrainlogscoring=mean(y_train*log(phatprobittrain)+(1-y_train)*log(phatprobittrain))
prtrainlogscoring
lrtestbrier
lrtestlogscoring
prtestbrier
prtestlogscoring
lrtrainbrier=mean(-(phatlogittrain-y_train)^2)
lrtrainlogscoring=mean(y_train*log(phatlogittrain)+(1-y_train)*log(phatlogittrain))
prtrainbrier=mean(-(phatprobittrain-y_train)^2)
prtrainlogscoring=mean(y_train*log(phatprobittrain)+(1-y_train)*log(phatprobittrain))
lrtestbrier=mean(-(phatlogittest-y_train)^2)
lrtestlogscoring=mean(y_train*log(phatlogittest)+(1-y_train)*log(phatlogittest))
prtestbrier=mean(-(phatprobittest-y_train)^2)
prtestlogscoring=mean(y_train*log(phatprobittest)+(1-y_train)*log(phatprobittest))
lrtrainbrier
lrtrainlogscoring
prtrainbrier
prtrainlogscoring
lrtestbrier
lrtestlogscoring
prtestbrier
prtestlogscoring
phatlogittrain
phatlogittest
phatlogittrain=abs(predict(logistic_mod,X_train))
phatlogittest=abs(predict(logistic_mod,X_test))
phatlogittest
lrtrainbrier=mean(-(phatlogittrain-y_train)^2)
lrtrainlogscoring=mean(y_train*log(phatlogittrain)+(1-y_train)*log(phatlogittrain))
prtrainbrier=mean(-(phatprobittrain-y_train)^2)
prtrainlogscoring=mean(y_train*log(phatprobittrain)+(1-y_train)*log(phatprobittrain))
lrtestbrier=mean(-(phatlogittest-y_train)^2)
lrtestlogscoring=mean(y_train*log(phatlogittest)+(1-y_train)*log(phatlogittest))
prtestbrier=mean(-(phatprobittest-y_train)^2)
prtestlogscoring=mean(y_train*log(phatprobittest)+(1-y_train)*log(phatprobittest))
lrtrainbrier=mean(-(phatlogittrain-y_train)^2)
lrtrainlogscoring=mean(y_train*log(phatlogittrain)+(1-y_train)*log(phatlogittrain))
prtrainbrier=mean(-(phatprobittrain-y_train)^2)
prtrainlogscoring=mean(y_train*log(phatprobittrain)+(1-y_train)*log(phatprobittrain))
lrtestbrier=mean(-(phatlogittest-y_train)^2)
lrtestlogscoring=mean(y_train*log(phatlogittest)+(1-y_train)*log(phatlogittest))
prtestbrier=mean(-(phatprobittest-y_train)^2)
prtestlogscoring=mean(y_train*log(phatprobittest)+(1-y_train)*log(phatprobittest))
lrtestbrier-prtestbrier
lrtestlogscoring-prtestlogscoring
lrtrainbrier
lrtrainlogscoring
prtrainbrier
prtrainlogscoring
lrtestbrier
lrtestlogscoring
prtestbrier
prtestlogscoring
